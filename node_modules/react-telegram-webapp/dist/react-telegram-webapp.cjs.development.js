'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);

var TelegramWebAppContext = /*#__PURE__*/React.createContext({});
function useStartParam() {
  var _useContext = React.useContext(TelegramWebAppContext),
      startParam = _useContext.startParam;

  return startParam;
}
function useTelegramWebApp() {
  var _useContext2 = React.useContext(TelegramWebAppContext),
      app = _useContext2.app;

  return app;
}
function useIsTelegramWebAppReady() {
  var _useContext3 = React.useContext(TelegramWebAppContext),
      isReady = _useContext3.isReady;

  return isReady;
}

function TelegramWebApp(_ref) {
  var children = _ref.children,
      validateHash = _ref.validateHash;

  var _useState = React.useState(false),
      isReady = _useState[0],
      setIsReady = _useState[1];

  var _useState2 = React.useState(false),
      isValid = _useState2[0],
      setIsValid = _useState2[1];

  var tgWebAppStartParamRef = React.useRef(new URLSearchParams(window.location.search).get("tgWebAppStartParam"));
  var model = {
    get app() {
      var _window$Telegram;

      return (_window$Telegram = window.Telegram) == null ? void 0 : _window$Telegram.WebApp;
    },

    startParam: tgWebAppStartParamRef.current,
    isReady: isReady
  };

  var onReady = function onReady() {
    var hashValidation = validateHash(model.app.initData);

    if (hashValidation instanceof Promise) {
      hashValidation.then(setIsValid)["finally"](function () {
        return setIsReady(true);
      });
    } else {
      setIsValid(hashValidation);
      setIsReady(true);
    }
  };

  React.useEffect(function () {
    if (isReady && !isValid) throw new Error("Invalid hash");
  }, [isReady, isValid]);
  return React__default.createElement(TelegramWebAppScript, {
    onLoad: onReady
  }, React__default.createElement(TelegramWebAppContext.Provider, {
    value: model
  }, children));
}
function withTelegramWebApp(Component, contextProps) {
  return function WithTelegramWebApp(props) {
    return React__default.createElement(TelegramWebApp, Object.assign({}, contextProps), React__default.createElement(Component, Object.assign({}, props)));
  };
}

function TelegramWebAppScript(_ref2) {
  var children = _ref2.children,
      onLoad = _ref2.onLoad;
  // inject on load, remove on unload (using effect), but only once per page
  React.useEffect(function () {
    var tgWebAppScript = document.createElement("script");
    tgWebAppScript.src = "https://telegram.org/js/telegram-web-app.js";
    tgWebAppScript.onload = onLoad;
    document.head.appendChild(tgWebAppScript);
    window.__TELEGRAM_WEB_APP_SCRIPT_INJECTED__ = true;
    return function () {
      document.head.removeChild(tgWebAppScript);
      window.__TELEGRAM_WEB_APP_SCRIPT_INJECTED__ = false;
    };
  }, []);
  return children;
}

exports.TelegramWebApp = TelegramWebApp;
exports.TelegramWebAppContext = TelegramWebAppContext;
exports.useIsTelegramWebAppReady = useIsTelegramWebAppReady;
exports.useStartParam = useStartParam;
exports.useTelegramWebApp = useTelegramWebApp;
exports.withTelegramWebApp = withTelegramWebApp;
//# sourceMappingURL=react-telegram-webapp.cjs.development.js.map
