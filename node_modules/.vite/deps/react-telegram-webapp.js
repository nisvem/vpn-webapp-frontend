import {
  require_react
} from "./chunk-HKLPI2XQ.js";
import {
  __toESM
} from "./chunk-ZS7NZCD4.js";

// node_modules/react-telegram-webapp/dist/react-telegram-webapp.esm.js
var import_react = __toESM(require_react());
var TelegramWebAppContext = (0, import_react.createContext)({});
function useStartParam() {
  var _useContext = (0, import_react.useContext)(TelegramWebAppContext), startParam = _useContext.startParam;
  return startParam;
}
function useTelegramWebApp() {
  var _useContext2 = (0, import_react.useContext)(TelegramWebAppContext), app = _useContext2.app;
  return app;
}
function useIsTelegramWebAppReady() {
  var _useContext3 = (0, import_react.useContext)(TelegramWebAppContext), isReady = _useContext3.isReady;
  return isReady;
}
function TelegramWebApp(_ref) {
  var children = _ref.children, validateHash = _ref.validateHash;
  var _useState = (0, import_react.useState)(false), isReady = _useState[0], setIsReady = _useState[1];
  var _useState2 = (0, import_react.useState)(false), isValid = _useState2[0], setIsValid = _useState2[1];
  var tgWebAppStartParamRef = (0, import_react.useRef)(new URLSearchParams(window.location.search).get("tgWebAppStartParam"));
  var model = {
    get app() {
      var _window$Telegram;
      return (_window$Telegram = window.Telegram) == null ? void 0 : _window$Telegram.WebApp;
    },
    startParam: tgWebAppStartParamRef.current,
    isReady
  };
  var onReady = function onReady2() {
    var hashValidation = validateHash(model.app.initData);
    if (hashValidation instanceof Promise) {
      hashValidation.then(setIsValid)["finally"](function() {
        return setIsReady(true);
      });
    } else {
      setIsValid(hashValidation);
      setIsReady(true);
    }
  };
  (0, import_react.useEffect)(function() {
    if (isReady && !isValid)
      throw new Error("Invalid hash");
  }, [isReady, isValid]);
  return import_react.default.createElement(TelegramWebAppScript, {
    onLoad: onReady
  }, import_react.default.createElement(TelegramWebAppContext.Provider, {
    value: model
  }, children));
}
function withTelegramWebApp(Component, contextProps) {
  return function WithTelegramWebApp(props) {
    return import_react.default.createElement(TelegramWebApp, Object.assign({}, contextProps), import_react.default.createElement(Component, Object.assign({}, props)));
  };
}
function TelegramWebAppScript(_ref2) {
  var children = _ref2.children, onLoad = _ref2.onLoad;
  (0, import_react.useEffect)(function() {
    var tgWebAppScript = document.createElement("script");
    tgWebAppScript.src = "https://telegram.org/js/telegram-web-app.js";
    tgWebAppScript.onload = onLoad;
    document.head.appendChild(tgWebAppScript);
    window.__TELEGRAM_WEB_APP_SCRIPT_INJECTED__ = true;
    return function() {
      document.head.removeChild(tgWebAppScript);
      window.__TELEGRAM_WEB_APP_SCRIPT_INJECTED__ = false;
    };
  }, []);
  return children;
}
export {
  TelegramWebApp,
  TelegramWebAppContext,
  useIsTelegramWebAppReady,
  useStartParam,
  useTelegramWebApp,
  withTelegramWebApp
};
//# sourceMappingURL=react-telegram-webapp.js.map
